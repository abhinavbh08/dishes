[{"/home/abhinav/Documents/javascript/dishes/src/index.js":"1","/home/abhinav/Documents/javascript/dishes/src/reportWebVitals.js":"2","/home/abhinav/Documents/javascript/dishes/src/App.js":"3","/home/abhinav/Documents/javascript/dishes/src/Components/Navbar.js":"4","/home/abhinav/Documents/javascript/dishes/src/Components/Content.js":"5","/home/abhinav/Documents/javascript/dishes/src/Components/Footer.js":"6"},{"size":535,"mtime":1689713707776,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1689710161471,"results":"9","hashOfConfig":"8"},{"size":1027,"mtime":1689755234949,"results":"10","hashOfConfig":"8"},{"size":321,"mtime":1689750637281,"results":"11","hashOfConfig":"8"},{"size":1405,"mtime":1689753491299,"results":"12","hashOfConfig":"8"},{"size":129,"mtime":1689754985248,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jmsjqp",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/abhinav/Documents/javascript/dishes/src/index.js",[],[],"/home/abhinav/Documents/javascript/dishes/src/reportWebVitals.js",[],[],"/home/abhinav/Documents/javascript/dishes/src/App.js",["34","35"],[],"import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { Navbar } from \"./Components/Navbar\";\nimport Content from \"./Components/Content\";\nimport { Footer } from \"./Components/Footer\";\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [currentDish, setCurrentDish] = useState(null);\n\n  const fetchDish = async () => {\n    setLoading(true);\n    console.log(\"Started fetching\");\n    const response = await fetch(\n      \"https://www.themealdb.com/api/json/v1/1/random.php\"\n    );\n    const data = await response.json();\n    console.log(\"Fetched\");\n    const currentDish = data.meals[0];\n    setCurrentDish(currentDish);\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <Navbar onClick={fetchDish}/>\n      {currentDish !== null ? (\n        <Content data={currentDish}/>\n      ) : (\n        <div class=\"placeholder-text\">\n          <p><strong>Click Find me a recipe button to get a random recipe.</strong></p>\n        </div>\n      )}\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","/home/abhinav/Documents/javascript/dishes/src/Components/Navbar.js",[],[],"/home/abhinav/Documents/javascript/dishes/src/Components/Content.js",["36"],[],"import \"../App.css\";\n\nfunction parseIngredients(data) {\n  const keys = Object.keys(data);\n  const ingredients = [];\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if (key.indexOf(\"strIngredient\") !== -1 && data[key] !== \"\") {\n      const ingredientNumber = parseInt(key.substring(13));\n      const ingredient = data[key];\n      const ingredientAmount = data[\"strMeasure\" + ingredientNumber];\n      ingredients.push(ingredient + \" - \" + ingredientAmount);\n    }\n  }\n  return ingredients;\n}\n\nfunction getInstructions(data) {\n    const instructions = data.strInstructions.split(\".\")\n    instructions.pop()\n    return instructions\n}\n\nconst Content = ({ data }) => {\n  return (\n    <div class=\"container\">\n      <p class=\"dish-name\">\n        <strong>\n          {data.strMeal} ({data.strArea})\n        </strong>\n      </p>\n      <img className=\"image\" src={data.strMealThumb} />\n      <section>\n        <ul class=\"ingredients-list\">\n          {parseIngredients(data).map((ingredient, index) => (\n            <li key=\"index\">{ingredient}</li>\n          ))}\n        </ul>\n      </section>\n      <section className=\"recipe\">\n        <h2>Recipe:</h2>\n        <ul>\n            {getInstructions(data).map(\n                (sentence, index) => (\n                    <li>{sentence}</li>\n                )\n            )}\n        </ul>\n      </section>\n    </div>\n  );\n};\n\nexport default Content;\n","/home/abhinav/Documents/javascript/dishes/src/Components/Footer.js",[],[],{"ruleId":"37","severity":1,"message":"38","line":1,"column":10,"nodeType":"39","messageId":"40","endLine":1,"endColumn":19},{"ruleId":"37","severity":1,"message":"41","line":8,"column":10,"nodeType":"39","messageId":"40","endLine":8,"endColumn":17},{"ruleId":"42","severity":1,"message":"43","line":32,"column":7,"nodeType":"44","endLine":32,"endColumn":56},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]